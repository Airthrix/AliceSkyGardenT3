# Encrypted. As it involves trade secrets, it is not fully open source at present.  API
# 数据已加密压缩 原文件6KB
# Warning: If you forcibly crack the data, it is an infringement and you should bear legal responsibility!
#MIT License
#
#Copyright (c) 2025 钱益聪 <airthrix@163.com>
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software **for personal, non-commercial use only**, subject to the following conditions:
#
#1. The above copyright notice and this permission notice shall be included in all
#   copies or substantial portions of the Software.
#
#2. **No person may distribute, sublicense, sell, or otherwise commercialize**
#   copies of the Software without prior written consent from the copyright holder.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.
import binascii
with open('API_SAFE.bin', 'rb') as f:
    hex_data = f.read()
    safe_code = binascii.unhexlify(hex_data).decode('utf-8')
    exec(safe_code)
exec(zlib.decompress(base64.b64decode('eJytWFmv49hxfr+/4uT2Q+u2rrWTkhrpIJRIShQp7hIldgYCd1HiJi4iKcMPfkkAxxkEBhwEcIIkT1mAjJM8xICTIH9m7rT9L3Io3b1nxjCQiwaah6fqq6qvqqhTx/WjME5BmNwmZXLl2iAIU6B5Xi1MGpGWbhtW4SZpUrNvgB3GwAZuAD6+bWA8taGJdWNvlW9vwduHpe4Gb7+4eX8F4F8Uu0Fau/7NL3/16R+++vp///abv/qzr//rP8FzVXD3s5+CZ7rg7l//+u5v/unrX39595c//fTrf/z0i6/u/ufn1zdnPOhf5Uxaa99cXb0BRGDEZZRaZgNgCXBT6Ngx9I5WAtJYMy2QWEZspcnteSs5h2VnnleCMLICkIRZbFhAS6GbVmIFaQNUjkDcb37+b9/8xVd3v/qPu5/8/d0v//Tuyz//9N//DO6+/LuL/yg9gkKKFgdu4LwHlA3KMKuoMVwdghuxZuxBurWAqaXag3EtgN7ZkA/H8qEtuDbPask2zDwT6JYWA89yNA9AZ6IwSFzd9dy0/IOrN3NKBoxrWEFiXb25ejMOozJ2nW0KasYN6LQ6CPjtz/790y9+8psf/wv4Q82N023sFn/cRrsNI/T/qFLhrdh3k8QNg8qVrRVbegmcWAsgd7fAji0LhDYwtlrsWLcgDaF3JYisOIEKoZ5qbhUp0IABTV+9gaLpFuIkoZ3mWmydY9GSJDRcDQICMzSyKkYtrQzargcTUqv4uJbuNa5vzlZMS/Ou3sCcV5sPe+Ddu6rKLtY17xamLfgBDMS3IL+QniyBzgZe+e7dLUgyfWcZaYVVQdih54V55aoRBqZbmU/eV/G3G0CG+5oeHq1zEBf+YEG4xsX9c0DRE033W8kW9gFMDsyd4WUmDA56C1/B/IMKyIWhQWehH0kK2az8q3qpMgzOND3F1agc6TRgeGz4wK2vlcCEvRW7epZa53i8S6Lhs+XB4CF4CFHi3E0qzx9YcE/Wu3cvnHhpDORuCgurKm0XQuSxm6aw5CEtVaHDjIf+Wf6Ji23omVZ8dlKeEkDiSFnBRAJQEuBFbknhBA6uMQmur2+BQslTbiEDKCFirLwGHAkwdg1oisVvAbHiRUKSACdevaHmPEMR8CXFjpkFTrETMIKKLAdLmoKFDVFlDlQW77EoQqrQ5oQ4nsIlNqIYSl7fXr0hKZmtUElOBBjgMVGmxgsGEwG/EHlOIqADOMRlKZYUoRliTrByA5qF7wCxhAsgTTGGqWxdvcEWMACxchGMOX4tUpOpDKYcgxPw5YiAvmEjhrjYgnGNGYya3wIcm2MT4qzFQRgYXiV3cRAoU6J6V1nE4L+xTHFsFcmYY2URLm9hoKL8qKtQEnELMJGSKk5IkZvDGCtOoQp3RoGKLHGBqfgGL9ICRar1QiIeEQFOYAwEkyrlc5QP0o0rgh2Lax6yvcExGQMfwPV6jfQXxCSWUbPNKoW5Hg1aXmcq0yfSzKZCqe7VaTyXux1MPajrdcf0VGqRTptRuXdLVTNWxCrhIx5Tu4nD6jk5jrctZ4jW1dbIqyu0bE75tGDHZVY3J/NobQfBCBmUZi6brYOALNJjGeDNQuDUgG2VzEQlBtq4WAvDueZlIk1rk/0iiTAtOyAFZx9PcbY/4epkRCtSiLP5Ni2ccUgWJX5Y6Z3JSqFNfmovw4wOpJwuLFIZMvTsyOODU3u4Z8ZFaCVCQdL5bKQOFUXFOx11PdiVuW/Ktu3Gp7ZNdI39MDZGKepQPqV1+vtduWynLUYds/RpShhOB7WRAGOy0apw8TUiz7x2ZE3GxFh1wjoyDxfzJSvjWd88sFzo5EkasKGUYKcU5bE+PRZOc42fJ8d2uENaA3mxOpq4IHR8Yd09YqbmUdYstztTHRvxRdTt1hPWGQ4FSZ8YMzeZHXg/0osQXeyYYN0iTA8r+MEp3cVkk1jTUyw5bqn+KiKQxBsIRjA4tbrowS51xS7mbdpba/WkbrJ40RFQfeuH0/5Q7MOyPkzrpRQ2mymKTIb4kif6Wm8/YOrp1FlFp1GXF5hRkq97mCfs2UIj29wWo0bbFdOE3O3d/XIQ74f8YaouDfEkN1eWPRfrMrlECTO2A77rd7l6OWmZXG8iHrWxyubEYFoUtD4pMi70ON0bWZP+2DVtnkYOYdt162reEsb10Zz2U50VqN12wE0dgULX43mfppAyirCUs1ZGkQUZuaZVXG3vjZ7EHZGpx3vmjo+bAWNFg+5+dzjsymid9fYdbYn7cjsdZuiEJiNW7yGG0TmQWlqqO3Y93sdjrJj1R1hsLcr5qlkicZ+xl+wIm+Rdy6RWO2FLCcN0cRi6kzYS+ofZPDK3px5aop4Yk9OSxdNyKA4de0j2KH4Qoh1+R0jLFE2HiIHqDqMF8rGZDBaGOsnJFtHi+/Kh0NB+2eoUMbeOukmLOSQ9aeKh2bBFC6S04vD6ouNPuklv7yJkk1zFy4GeH2nsNCcS9DASDvmU5iezcDmMgt1+iNRDNR+1TY8qZ5jkJViynSZNprVbb9W15EQHYbnKjkdhFjU7MBKDPMin3RJZytup1DPM+MRomrlY26HbdFJj0Cs1WR4butMlfFZ0DGeg9pSDsYoMrEOyMjtWl3YiU8PYt09C7xAPfOsQUXrur6yF3lTpLVsnJdYwzNBatefRDpc0eeGa3ahotl0SdY69OaoqLcGbe/5QXXtdF/UUdJqQoz69YCetVWtMmBTv2YocUpg3PETbdtrXD4NcpuG5tH/qC4g0POaENxzUJ0rYnNtmXbWmgwOl7OoIEfMWVpLwoy9zKK/0aCYpcVUoiFE8w2RHbxmSgwfqQDALRQz2NuGI3ZbRp5fZbBZrA5XRkGRs1xGjQxU6kmuzRXNOSvi8HE7Fpj1YZr7oOvUM5pzrZG2J3i6Ck9ILph0lIYztadLhV2hIStFpaUdysaTqwqHu7fAskfOwkHLfFVqTtsfVCQPpClFKr4segnudZWGqpGO6qLSnRgnd3kruLpAVsV0uXOmU78Uhp6ztk4tYs858Xc8CNkL6W0WeJvO6G2mie0gXc5nfz8Ki3R72+3uHGyrHrbTP9KUkOknT9tfHNHKP48OYGY2k6aS1QIiTHktCGrgaptEjYXoKkXTRYZtz5cgIR96lPE3udMsVGnsS4+OU1tVSZNucG4sdNZtnudMOrKFNzFCeF06ploSKHU6zucCIeU7WqTpKC2vvcNwi/sQYdZsrfZAGc8FBuM5h5GcI/G3AAv/EKjlL0kJSH/dszs+LXrPTTdn2gtyhWYeWZidjMbFXXq9LR/HcL1u9VPfX3OJg73PmeDgehxTqIpzu75DZwF3KSkRh3AkfigLeb1pYByX3UTlZe9OV341dNygUJZ0oKbNcahhlOcs4xXkCbzW7O0kkctPiVvKMp5fsqvCs1VwkA6mZjU/ogD0yw2W/mBlrL8VLhMsZK3CEyWSHkogwidbwNyDoqu3BYAJ5XG0PvcEszrJCoUeWq4aRg7iRWKqcIhra/jQNEUcf5pOpelq0eGQ0SnCfavOzUVfB8ULpWq2y1/LMPjyB9NjOaCwdmdPWHkTXV+7D2PbwpGuJhfYeVifP1R+e0zKyHsXOQ97lcQcPoVfnw+C4GqTCxtiN4GET3G9jhPRid5G6XoPXTLM6Yt/LZEGkmVemZcPT/Hka2/jGccCqLbJmPYxnm8sgBKe9+7nQPcIjyMvtj+/b6BfnTePsQ2oV6edCbfT9cyEoAH1sBFZeg+C358Wcw4nNeDSGg9fxg3u8DI73vsHz+4d71cb9q9qTuYtoGpcXJ6s/OD5mcXAJsvYIcjGke6Gx3yTwKH5RtArDilKwhAcYi4jjMH6CuZ+D/6TV7X4ctn1CFDnxvGj595Pt6+m2ItSx0g0Ma6OV3CLnnW3tnr0XHlYH/fM8W7ukv6GjPehoaFq1a2ZPCtJyyIjLfaZ1lsj1TeN+C85f17F+fQPHtiotm2pIe8J8FvnDZiO2IAMvAiXO/1XDEgR5ph1r1awiZnAc8i9E1Ozrc8jvwQ/hrFOzbn50/RRhldcNeRh2EH+lPYToa0lqxVX0MGGf8/D70SAsR7NVKyUVCXE1pffh22mAs5HtOt/CxFMJXkSqEnqSfU7Mi0p7kv6exrjI3D6L9wnpUb/q0oYXamZSe41+87pSP4v+IvfxGkJff/F75I86t/f3p6/yacNvldZJXHDfWp2uDbZaoqVQDVb3LXgLc5nGmmG9vTmP3VXJP7yq3Txc0rBh8CoHrxpIwkji8/551UPPXz/KPFXUq7r7TPIpSXqZwgn7w+fcvpyqvqUGvj/5Z9zLZ/HpG3C+lNpU8FC5+oafa9Wvrqiepf+xgq+z1P7B4BkJfmhuKETt+tKgCxHOX/7GPDQzz5Lhc+36UhBZfL6d2WjVfUOyLx0tNq1gk3a/A6qxOVf7ZgMxHx6/SzDQ/Ivg77T1XQiRZuw15x7kScoqLKP2jKHb13qma6SbzWdN8Vzq/68DHgvdP7O7cYPqDsio8vaqMc5S1aVW1QhneqprJNONa69Ub150zvka9kGjASXiNKm+c7W3m83bm5cN4nihrnlJ7ebjo8YXl0I/N98rO7dPuDePRV+1zkUu+fg7M1eBvwK9umf1GW/PeL10sP3yNxDyaf3oZSNf5D7/iKN0vYugkwxh6iYSaVOEyTrUGBktCM+WWkuV8VPPknBvH+bOqw++g2idNaKW4bMP/+f3yf8HsRh9Lw==')).decode('utf-8'))